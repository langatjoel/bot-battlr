{"ast":null,"code":"var _jsxFileName = \"/home/joel/development/code/bot-battlr/src/components/BotSpecs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotSpecs() {\n  _s();\n  const [bot, setBot] = useState(null);\n  const {\n    botId\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:3000/bots/${botId}`).then(response => response.json()).then(data => setBot(data)).catch(error => console.error('Error fetching bot specs:', error));\n  }, [botId]);\n  const handleEnlist = () => {\n    // Implement enlist functionality here\n    console.log('Enlisting bot:', bot);\n  };\n  if (!bot) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-specs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: bot.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health: \", bot.health]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Damage: \", bot.damage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Armor: \", bot.armor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEnlist,\n      children: \"Enlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(BotSpecs, \"i/N7/kQdI5Cf7npLltVk5zCVDL8=\", false, function () {\n  return [useParams];\n});\n_c = BotSpecs;\nexport default BotSpecs;\nvar _c;\n$RefreshReg$(_c, \"BotSpecs\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","BotSpecs","_s","bot","setBot","botId","fetch","then","response","json","data","catch","error","console","handleEnlist","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","health","damage","armor","to","onClick","_c","$RefreshReg$"],"sources":["/home/joel/development/code/bot-battlr/src/components/BotSpecs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nfunction BotSpecs() {\n  const [bot, setBot] = useState(null);\n  const { botId } = useParams();\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/bots/${botId}`)\n      .then(response => response.json())\n      .then(data => setBot(data))\n      .catch(error => console.error('Error fetching bot specs:', error));\n  }, [botId]);\n\n  const handleEnlist = () => {\n    // Implement enlist functionality here\n    console.log('Enlisting bot:', bot);\n  };\n\n  if (!bot) return <div>Loading...</div>;\n\n  return (\n    <div className=\"bot-specs\">\n      <h2>{bot.name}</h2>\n      <p>Health: {bot.health}</p>\n      <p>Damage: {bot.damage}</p>\n      <p>Armor: {bot.armor}</p>\n      <Link to=\"/\">Back to list</Link>\n      <button onClick={handleEnlist}>Enlist</button>\n    </div>\n  );\n}\n\nexport default BotSpecs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM;IAAEU;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAE,8BAA6BD,KAAM,EAAC,CAAC,CACzCE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,MAAM,CAACM,IAAI,CAAC,CAAC,CAC1BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAD,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEZ,GAAG,CAAC;EACpC,CAAC;EAED,IAAI,CAACA,GAAG,EAAE,oBAAOH,OAAA;IAAAgB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEtC,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAKb,GAAG,CAACmB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBpB,OAAA;MAAAgB,QAAA,GAAG,UAAQ,EAACb,GAAG,CAACoB,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MAAAgB,QAAA,GAAG,UAAQ,EAACb,GAAG,CAACqB,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BpB,OAAA;MAAAgB,QAAA,GAAG,SAAO,EAACb,GAAG,CAACsB,KAAK;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA,CAACF,IAAI;MAAC4B,EAAE,EAAC,GAAG;MAAAV,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChCpB,OAAA;MAAQ2B,OAAO,EAAEb,YAAa;MAAAE,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAAClB,EAAA,CA5BQD,QAAQ;EAAA,QAEGJ,SAAS;AAAA;AAAA+B,EAAA,GAFpB3B,QAAQ;AA8BjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}