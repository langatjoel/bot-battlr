{"ast":null,"code":"var _jsxFileName = \"/home/joel/development/code/bot-battlr/src/components/BotSpecs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BotSpecs({\n  botId\n}) {\n  _s();\n  const [bot, setBot] = useState(null);\n  useEffect(() => {\n    // Fetch bot details based on botId\n    fetch(`http://localhost:3000/bots/${botId}`).then(response => response.json()).then(data => setBot(data)).catch(error => console.error('Error fetching bot specs:', error));\n  }, [botId]);\n  if (!bot) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 20\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bot-specs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: bot.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Health: \", bot.health]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Damage: \", bot.damage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Armor: \", bot.armor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Class: \", bot.bot_class]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Catchphrase: \", bot.catchphrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(BotSpecs, \"qrOVPdjQkhL9oIWfSpzUj+v2QAI=\");\n_c = BotSpecs;\nexport default BotSpecs;\nvar _c;\n$RefreshReg$(_c, \"BotSpecs\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BotSpecs","botId","_s","bot","setBot","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","health","damage","armor","bot_class","catchphrase","_c","$RefreshReg$"],"sources":["/home/joel/development/code/bot-battlr/src/components/BotSpecs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction BotSpecs({ botId }) {\n  const [bot, setBot] = useState(null);\n\n  useEffect(() => {\n    // Fetch bot details based on botId\n    fetch(`http://localhost:3000/bots/${botId}`)\n      .then(response => response.json())\n      .then(data => setBot(data))\n      .catch(error => console.error('Error fetching bot specs:', error));\n  }, [botId]);\n\n  if (!bot) return <div>Loading...</div>;\n\n  return (\n    <div className=\"bot-specs\">\n      <h2>{bot.name}</h2>\n      <p>Health: {bot.health}</p>\n      <p>Damage: {bot.damage}</p>\n      <p>Armor: {bot.armor}</p>\n      <p>Class: {bot.bot_class}</p>\n      <p>Catchphrase: {bot.catchphrase}</p>\n      {/* Additional specifications */}\n    </div>\n  );\n}\n\nexport default BotSpecs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAE,8BAA6BJ,KAAM,EAAC,CAAC,CACzCK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,MAAM,CAACK,IAAI,CAAC,CAAC,CAC1BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,CAACV,KAAK,CAAC,CAAC;EAEX,IAAI,CAACE,GAAG,EAAE,oBAAOJ,OAAA;IAAAc,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEtC,oBACElB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAL,QAAA,gBACxBd,OAAA;MAAAc,QAAA,EAAKV,GAAG,CAACgB;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBlB,OAAA;MAAAc,QAAA,GAAG,UAAQ,EAACV,GAAG,CAACiB,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAAc,QAAA,GAAG,UAAQ,EAACV,GAAG,CAACkB,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BlB,OAAA;MAAAc,QAAA,GAAG,SAAO,EAACV,GAAG,CAACmB,KAAK;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBlB,OAAA;MAAAc,QAAA,GAAG,SAAO,EAACV,GAAG,CAACoB,SAAS;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BlB,OAAA;MAAAc,QAAA,GAAG,eAAa,EAACV,GAAG,CAACqB,WAAW;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElC,CAAC;AAEV;AAACf,EAAA,CAxBQF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AA0BjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}