{"ast":null,"code":"var _jsxFileName = \"/home/joel/development/code/bot-battlr/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BotCollection from './components/BotCollection';\nimport BotArmy from './components/BotArmy';\nimport SortBar from './components/SortBar';\nimport './App.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const botsAPI = 'https://bots-taupe.vercel.app/bots';\n  const [bots, setBots] = useState([]);\n  useEffect(() => {\n    fetch(botsAPI).then(res => res.json()).then(setBots);\n  }, []);\n  function enlistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {\n      ...bot,\n      isEnlisted: true\n    } : bot));\n  }\n  function delistBot(id) {\n    setBots(bots.map(bot => id === bot.id ? {\n      ...bot,\n      isEnlisted: false\n    } : bot));\n  }\n  function dischargeBot(id) {\n    setBots(bots.filter(bot => bot.id === id ? false : true));\n  }\n\n  // Function to sort bots by criteria (health, damage, or armor)\n  function handleSort(criteria) {\n    const sortedBots = [...bots].sort((a, b) => b[criteria] - a[criteria]);\n    setBots(sortedBots);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-heading\",\n      children: \"Bot Battlr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-content\",\n      children: [/*#__PURE__*/_jsxDEV(SortBar, {\n        handleSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotArmy, {\n        bots: bots.filter(bot => bot.isEnlisted),\n        handleDischarge: dischargeBot,\n        handleClick: delistBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: bots,\n        handleDischarge: dischargeBot,\n        handleClick: enlistBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BotCollection","BotArmy","SortBar","jsxDEV","_jsxDEV","App","_s","botsAPI","bots","setBots","fetch","then","res","json","enlistBot","id","map","bot","isEnlisted","delistBot","dischargeBot","filter","handleSort","criteria","sortedBots","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDischarge","handleClick","_c","$RefreshReg$"],"sources":["/home/joel/development/code/bot-battlr/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport BotCollection from './components/BotCollection';\nimport BotArmy from './components/BotArmy';\nimport SortBar from './components/SortBar';\nimport './App.css'; // Import your CSS file for styling\n\nexport default function App() {\n  const botsAPI = 'https://bots-taupe.vercel.app/bots';\n  const [bots, setBots] = useState([]);\n\n  useEffect(() => {\n    fetch(botsAPI)\n      .then((res) => res.json())\n      .then(setBots);\n  }, []);\n\n  function enlistBot(id) {\n    setBots(bots.map((bot) => (id === bot.id ? { ...bot, isEnlisted: true } : bot)));\n  }\n\n  function delistBot(id) {\n    setBots(bots.map((bot) => (id === bot.id ? { ...bot, isEnlisted: false } : bot)));\n  }\n\n  function dischargeBot(id) {\n    setBots(bots.filter((bot) => (bot.id === id ? false : true)));\n  }\n\n  // Function to sort bots by criteria (health, damage, or armor)\n  function handleSort(criteria) {\n    const sortedBots = [...bots].sort((a, b) => b[criteria] - a[criteria]);\n    setBots(sortedBots);\n  }\n\n  return (\n    <div className=\"app-container\">\n      <h1 className=\"app-heading\">Bot Battlr</h1>\n      <div className=\"app-content\">\n        <SortBar handleSort={handleSort} />\n        <BotArmy bots={bots.filter((bot) => bot.isEnlisted)} handleDischarge={dischargeBot} handleClick={delistBot} />\n        <BotCollection bots={bots} handleDischarge={dischargeBot} handleClick={enlistBot} />\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}